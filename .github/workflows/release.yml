name: Release
on:
  push:
    tags:
      - 'v**'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.0.0'

permissions:
  contents: write

jobs:
  build:
    uses: "./.github/workflows/build.yaml"

  build-apk:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable
          version: latest
          cache: true
          cache-sdk: true
          cache-key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '22'
          cache: 'gradle'

      - name: Cache Flutter Dependencies
        uses: actions/cache@v4
        id: dependency-cache
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-flutter-dependency-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-dependency-

      - name: Install dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: flutter pub get

      - name: Get track from tag
        id: track
        run: |
          TAG_NAME=$(git describe --tags)
          # Assuming the tag format is like v1.0.0-trackname, extract the track part
          TRACK=$(echo $TAG_NAME | awk -F '-' '{print $2}')
          echo "TRACK=$TRACK" >> $GITHUB_ENV

      - name: upload google play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON }}
          packageName: com.htilssu.expense_tracking
          releaseFiles: build/app/outputs/flutter-apk/app-release.apk
          track: ${{ env.TRACK }}
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 0.33
          whatsNewDirectory: distribution/whatsnew
          mappingFile: app/build/outputs/mapping/release/mapping.txt
          debugSymbols: app/intermediates/merged_native_libs/release/out/lib
#  build-ipa:
#    runs-on: macos-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Flutter SDK
#        uses: flutter-actions/setup-flutter@v4
#        with:
#          channel: stable
#          version: latest
#          cache: true
#          cache-sdk: true
#          cache-key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Build release IPA
#        run: flutter build ipa --release
#
#      - name: Upload IPA artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: app-release-ipa
#          path: build/ios/iphoneos/Runner.ipa

#
#  create-release:
#    runs-on: ubuntu-latest
#    needs: [ build-apk, build-ipa ]
#    steps:
#      - name: Download APK artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: app-release-apk
#          path: .
#
#      - name: Download IPA artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: app-release-ipa
#          path: .
#
#      - name: Rename artifacts
#        run: |
#          mv app-release-apk trezo.apk
#          mv app-release-ipa trezo.ipa
#
#      - name: Create release
#        uses: softprops/action-gh-release@v4
#        with:
#          files: |
#            build/app/outputs/flutter-apk/app-release.apk
#            build/ios/iphoneos/Runner.ipa
#          token: ${{ secrets.GITHUB_TOKEN }}
#          release_name: ${{ github.ref }}
#          release_body: ${{ github.event.head_commit.message }}
#          tag: ${{ github.ref }}
#          draft: false
#          prerelease: false